{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"Seminar 3 (решенный).ipynb\"","provenance":[{"file_id":"16KHy8B9XzNbBa0TEGR23fjJ1ZOIZaOmD","timestamp":1601488626754},{"file_id":"1fzdTtJg7d6zfTc0OOYihThLkmAQcU4iL","timestamp":1601391288919}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"bplHLcVW2aGi","executionInfo":{"status":"ok","timestamp":1602596530954,"user_tz":-180,"elapsed":5531,"user":{"displayName":"Polina Gatsenko","photoUrl":"","userId":"03872930879058490467"}},"outputId":"9b140517-c687-4c13-c126-31103fa6d89f","colab":{"base_uri":"https://localhost:8080/","height":241}},"source":["!pip install kaggle"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.8)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.0.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.6.20)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.15.0)\n","Requirement already satisfied: slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (0.0.1)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify->kaggle) (1.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle) (2.10)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TvQN2ji_2tVT","executionInfo":{"status":"ok","timestamp":1602596530978,"user_tz":-180,"elapsed":5493,"user":{"displayName":"Polina Gatsenko","photoUrl":"","userId":"03872930879058490467"}},"outputId":"f12c05f0-58a6-4067-8d99-b3b31642b18e","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["!cp kaggle.json ~/.kaggle/kaggle.json && chmod 600 ~/.kaggle/kaggle.json"],"execution_count":2,"outputs":[{"output_type":"stream","text":["cp: cannot stat 'kaggle.json': No such file or directory\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oJk1AXqq1r6C","executionInfo":{"status":"ok","timestamp":1601489159808,"user_tz":-180,"elapsed":4299,"user":{"displayName":"Polina Gatsenko","photoUrl":"","userId":"03872930879058490467"}},"outputId":"5c3a5412-4b5e-4eb0-f6cc-b32ffc920047","colab":{"base_uri":"https://localhost:8080/","height":153}},"source":["!kaggle datasets download -d ruchi798/bookcrossing-dataset && unzip bookcrossing-dataset.zip"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Traceback (most recent call last):\n","  File \"/usr/local/bin/kaggle\", line 5, in <module>\n","    from kaggle.cli import main\n","  File \"/usr/local/lib/python2.7/dist-packages/kaggle/__init__.py\", line 23, in <module>\n","    api.authenticate()\n","  File \"/usr/local/lib/python2.7/dist-packages/kaggle/api/kaggle_api_extended.py\", line 146, in authenticate\n","    self.config_file, self.config_dir))\n","IOError: Could not find kaggle.json. Make sure it's located in /root/.kaggle. Or use the environment method.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xO5gXtom3tA2"},"source":["import numpy as np\n","import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"K6pPg3Nh3zvP"},"source":["DATA_FOLDER = 'Book reviews/'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VsDbvX6V46s-"},"source":["params = dict(sep=';', encoding='latin-1', low_memory=False, skiprows=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lF_TJx_b3Kiz","executionInfo":{"status":"error","timestamp":1601489161860,"user_tz":-180,"elapsed":880,"user":{"displayName":"Polina Gatsenko","photoUrl":"","userId":"03872930879058490467"}},"outputId":"75d67911-d9ee-4c18-e3bb-10b6ddc2ebc7","colab":{"base_uri":"https://localhost:8080/","height":374}},"source":["r_cols = ['user_id', 'isbn', 'rating'] \n","b_cols = [\n","    'isbn', 'book_title', 'book_author', \n","    'year_of_publication', 'publisher', \n","    'img_s', 'img_m', 'img_l'\n","]\n","u_cols = ['user_id', 'location', 'age']\n","\n","\n","ratings = pd.read_csv(DATA_FOLDER + 'BX-Book-Ratings.csv', names=r_cols, **params)\n","books = pd.read_csv(DATA_FOLDER + 'BX-Books.csv', names=b_cols, **params)\n","users   = pd.read_csv(DATA_FOLDER + 'BX-Users.csv', names=u_cols, **params)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-0c7462d9d2e6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mratings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDATA_FOLDER\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'BX-Book-Ratings.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mr_cols\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0mbooks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDATA_FOLDER\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'BX-Books.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mb_cols\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0musers\u001b[0m   \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDATA_FOLDER\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'BX-Users.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mu_cols\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    684\u001b[0m     )\n\u001b[1;32m    685\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 686\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    688\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    450\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    451\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 452\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfp_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    453\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    454\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    934\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    935\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 936\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    937\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    938\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1166\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"c\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1167\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"c\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1168\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCParserWrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1169\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1170\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"python\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m   1979\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"compression\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1980\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1981\u001b[0;31m                 \u001b[0msrc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"rb\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1982\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1983\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'Book reviews/BX-Book-Ratings.csv'"]}]},{"cell_type":"code","metadata":{"id":"BRpxmihQ5VVp","executionInfo":{"status":"error","timestamp":1601489171638,"user_tz":-180,"elapsed":830,"user":{"displayName":"Polina Gatsenko","photoUrl":"","userId":"03872930879058490467"}},"outputId":"30dbf1e0-a5b0-413c-a6fc-1bb83a6200b3","colab":{"base_uri":"https://localhost:8080/","height":163}},"source":["ratings.head()"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-a5d1d4105667>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mratings\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'ratings' is not defined"]}]},{"cell_type":"code","metadata":{"id":"8r2pKugV5dwD","executionInfo":{"status":"ok","timestamp":1601388261185,"user_tz":-180,"elapsed":1299,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"a4f34aca-de7d-4764-cd1a-cd60c1acac3b","colab":{"base_uri":"https://localhost:8080/","height":378}},"source":["books.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>isbn</th>\n","      <th>book_title</th>\n","      <th>book_author</th>\n","      <th>year_of_publication</th>\n","      <th>publisher</th>\n","      <th>img_s</th>\n","      <th>img_m</th>\n","      <th>img_l</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0195153448</td>\n","      <td>Classical Mythology</td>\n","      <td>Mark P. O. Morford</td>\n","      <td>2002</td>\n","      <td>Oxford University Press</td>\n","      <td>http://images.amazon.com/images/P/0195153448.0...</td>\n","      <td>http://images.amazon.com/images/P/0195153448.0...</td>\n","      <td>http://images.amazon.com/images/P/0195153448.0...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002005018</td>\n","      <td>Clara Callan</td>\n","      <td>Richard Bruce Wright</td>\n","      <td>2001</td>\n","      <td>HarperFlamingo Canada</td>\n","      <td>http://images.amazon.com/images/P/0002005018.0...</td>\n","      <td>http://images.amazon.com/images/P/0002005018.0...</td>\n","      <td>http://images.amazon.com/images/P/0002005018.0...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0060973129</td>\n","      <td>Decision in Normandy</td>\n","      <td>Carlo D'Este</td>\n","      <td>1991</td>\n","      <td>HarperPerennial</td>\n","      <td>http://images.amazon.com/images/P/0060973129.0...</td>\n","      <td>http://images.amazon.com/images/P/0060973129.0...</td>\n","      <td>http://images.amazon.com/images/P/0060973129.0...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0374157065</td>\n","      <td>Flu: The Story of the Great Influenza Pandemic...</td>\n","      <td>Gina Bari Kolata</td>\n","      <td>1999</td>\n","      <td>Farrar Straus Giroux</td>\n","      <td>http://images.amazon.com/images/P/0374157065.0...</td>\n","      <td>http://images.amazon.com/images/P/0374157065.0...</td>\n","      <td>http://images.amazon.com/images/P/0374157065.0...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0393045218</td>\n","      <td>The Mummies of Urumchi</td>\n","      <td>E. J. W. Barber</td>\n","      <td>1999</td>\n","      <td>W. W. Norton &amp;amp; Company</td>\n","      <td>http://images.amazon.com/images/P/0393045218.0...</td>\n","      <td>http://images.amazon.com/images/P/0393045218.0...</td>\n","      <td>http://images.amazon.com/images/P/0393045218.0...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         isbn  ...                                              img_l\n","0  0195153448  ...  http://images.amazon.com/images/P/0195153448.0...\n","1  0002005018  ...  http://images.amazon.com/images/P/0002005018.0...\n","2  0060973129  ...  http://images.amazon.com/images/P/0060973129.0...\n","3  0374157065  ...  http://images.amazon.com/images/P/0374157065.0...\n","4  0393045218  ...  http://images.amazon.com/images/P/0393045218.0...\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"fRzqEZrC5fSm","executionInfo":{"status":"ok","timestamp":1601388261960,"user_tz":-180,"elapsed":640,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"39d501e3-b938-4f8a-b56d-e6b4edbfadff","colab":{"base_uri":"https://localhost:8080/","height":202}},"source":["users.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>location</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>nyc, new york, usa</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>stockton, california, usa</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>moscow, yukon territory, russia</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>porto, v.n.gaia, portugal</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>farnborough, hants, united kingdom</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id                            location   age\n","0        1                  nyc, new york, usa   NaN\n","1        2           stockton, california, usa  18.0\n","2        3     moscow, yukon territory, russia   NaN\n","3        4           porto, v.n.gaia, portugal  17.0\n","4        5  farnborough, hants, united kingdom   NaN"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"Wpq0UpZ57Zt6"},"source":["Подсчет статистик"]},{"cell_type":"code","metadata":{"id":"2UVKIslXQAc3","executionInfo":{"status":"ok","timestamp":1601388264084,"user_tz":-180,"elapsed":649,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"01411f5e-c784-447b-e0a3-e108f44eecf9","colab":{"base_uri":"https://localhost:8080/","height":294}},"source":["users.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>278858.00000</td>\n","      <td>168096.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>139429.50000</td>\n","      <td>34.751434</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>80499.51502</td>\n","      <td>14.428097</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.00000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>69715.25000</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>139429.50000</td>\n","      <td>32.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>209143.75000</td>\n","      <td>44.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>278858.00000</td>\n","      <td>244.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            user_id            age\n","count  278858.00000  168096.000000\n","mean   139429.50000      34.751434\n","std     80499.51502      14.428097\n","min         1.00000       0.000000\n","25%     69715.25000      24.000000\n","50%    139429.50000      32.000000\n","75%    209143.75000      44.000000\n","max    278858.00000     244.000000"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"markdown","metadata":{"id":"6oF-4W6wQJ4z"},"source":["Каждую статистику по отдельности можно посчитать соответствующими методами."]},{"cell_type":"code","metadata":{"id":"3fGvQ1iAQPXQ","executionInfo":{"status":"ok","timestamp":1601388265869,"user_tz":-180,"elapsed":653,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"c7812d50-c781-4e2c-f5bc-04f09e719981","colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["users.age.mean(), users.age.std()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(34.75143370454978, 14.428097382455773)"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"Kwc3i0vQQYyj"},"source":["**Задание 1**. На основе имеющихся знаний подсчитайте средний рейтинг по пользователям.\n"]},{"cell_type":"code","metadata":{"id":"TqO1BncFLq4l"},"source":["user_ids = sorted(list(set(ratings.user_id)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"L-eL0X_xLeNz","executionInfo":{"status":"ok","timestamp":1601390904339,"user_tz":-180,"elapsed":186774,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"2301e12c-6149-4b75-d40c-e9e43d9417e3","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","ratings_by_user = {}\n","for user_id in user_ids:\n","  ratings_by_user[user_id] = ratings.loc[ratings.user_id == user_id, 'rating'].mean()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["CPU times: user 3min 4s, sys: 1.57 s, total: 3min 5s\n","Wall time: 3min 6s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vRiHvGKTti8R","executionInfo":{"status":"ok","timestamp":1601390904341,"user_tz":-180,"elapsed":184207,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"4b2a6402-ed3d-423f-b4ba-0bb379048090","colab":{"base_uri":"https://localhost:8080/","height":191}},"source":["for idx, value in enumerate(ratings_by_user.items()):\n","  if idx >= 10:\n","    break\n","  print(value)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(2, 0.0)\n","(7, 0.0)\n","(8, 2.1666666666666665)\n","(9, 2.0)\n","(10, 3.0)\n","(12, 10.0)\n","(14, 4.0)\n","(16, 4.5)\n","(17, 3.0)\n","(19, 7.0)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"nblmIXdrP0CN"},"source":["Довольно долго выполняется, но работает."]},{"cell_type":"markdown","metadata":{"id":"u7Nj2qNrRVcP"},"source":["**Задание 2**. На основе имеющихся знаний подсчитайте наиболее популярный адрес пользователя."]},{"cell_type":"code","metadata":{"id":"cfivbpA8ORty","executionInfo":{"status":"ok","timestamp":1601391071511,"user_tz":-180,"elapsed":75100,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"7c8c7221-3cc1-45c2-d0be-1da60dd0ae29","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["%%time\n","locations = {location: 0 for location in sorted(list(set(users.location)))}\n","for user_id in user_ids:\n","  location = users.loc[users.user_id == user_id, 'location'].values[0]\n","  locations[location] += 1\n","\n","most_common = None\n","for location, counter in locations.items():\n","  if most_common is None or counter > most_common[1]:\n","    most_common = (location, counter)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["CPU times: user 1min 13s, sys: 674 ms, total: 1min 14s\n","Wall time: 1min 14s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WjybmVBVWK2g","executionInfo":{"status":"ok","timestamp":1601391084442,"user_tz":-180,"elapsed":730,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"3eb32f57-acdf-430b-8b85-464988003170","colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["print(most_common)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["('toronto, ontario, canada', 949)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NsL_1n84RrpK"},"source":["В pandas существую группировки, подобные на группировки в SQL."]},{"cell_type":"code","metadata":{"id":"MM4RkrbaQXgg","executionInfo":{"status":"ok","timestamp":1600887918083,"user_tz":-180,"elapsed":634,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"a0c69c63-3a1c-466b-e849-b9d61a441e5b","colab":{"base_uri":"https://localhost:8080/","height":227}},"source":["users.groupby('location').agg({'age': 'mean', 'user_id': 'max'}).sort_values(by='age', ascending=False).head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>user_id</th>\n","    </tr>\n","    <tr>\n","      <th>location</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>akure, ondo/nigeria, nigeria</th>\n","      <td>231.0</td>\n","      <td>1579</td>\n","    </tr>\n","    <tr>\n","      <th>olympia, cascadia, usa</th>\n","      <td>226.0</td>\n","      <td>163827</td>\n","    </tr>\n","    <tr>\n","      <th>santa maria da feira, porto, portugal</th>\n","      <td>223.0</td>\n","      <td>211521</td>\n","    </tr>\n","    <tr>\n","      <th>christchurch, canterbury, nz</th>\n","      <td>220.0</td>\n","      <td>245231</td>\n","    </tr>\n","    <tr>\n","      <th>arrasate, gipuzkoa, euskal herria</th>\n","      <td>209.0</td>\n","      <td>76865</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                         age  user_id\n","location                                             \n","akure, ondo/nigeria, nigeria           231.0     1579\n","olympia, cascadia, usa                 226.0   163827\n","santa maria da feira, porto, portugal  223.0   211521\n","christchurch, canterbury, nz           220.0   245231\n","arrasate, gipuzkoa, euskal herria      209.0    76865"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"BFku7HfXShKn"},"source":["**Задание 3**. Выполните первое задание через группировку пандаса."]},{"cell_type":"code","metadata":{"id":"BQHCX_3BUK_u","executionInfo":{"status":"ok","timestamp":1601391096599,"user_tz":-180,"elapsed":685,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"f894215d-d71c-4aab-c8d1-e33b7f69ea5b","colab":{"base_uri":"https://localhost:8080/","height":421}},"source":["%%time\n","ratings.groupby('user_id').agg({'rating': 'mean'}).head(10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["CPU times: user 49.4 ms, sys: 8.93 ms, total: 58.3 ms\n","Wall time: 62.3 ms\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.166667</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>10.000000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>4.500000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>7.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            rating\n","user_id           \n","2         0.000000\n","7         0.000000\n","8         2.166667\n","9         2.000000\n","10        3.000000\n","12       10.000000\n","14        4.000000\n","16        4.500000\n","17        3.000000\n","19        7.000000"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"markdown","metadata":{"id":"oH2RlsceWQjs"},"source":["Заметно быстрее сработало)."]},{"cell_type":"markdown","metadata":{"id":"GL7RDFl6T2DB"},"source":["Существуют в пандасе и SQL подобные join'ы."]},{"cell_type":"code","metadata":{"id":"i6V2xve0Syor","executionInfo":{"status":"ok","timestamp":1600870499906,"user_tz":-180,"elapsed":1203,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"24576898-7e90-417e-c596-ccfd04c0ccf1","colab":{"base_uri":"https://localhost:8080/","height":386}},"source":["ratings.set_index('user_id').join(users.set_index('user_id')).sort_values(by='age', ascending=False).head(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>isbn</th>\n","      <th>rating</th>\n","      <th>location</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20857</th>\n","      <td>4453099966</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3442447690</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3760004776</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>370300072</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3596134072</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3570046060</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3548602886</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3499424657</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>349926224X</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","    <tr>\n","      <th>20857</th>\n","      <td>3463179385</td>\n","      <td>0</td>\n","      <td>stuttgart, baden-wuerttemberg, germany</td>\n","      <td>244.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               isbn  rating                                location    age\n","user_id                                                                   \n","20857    4453099966       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3442447690       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3760004776       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857     370300072       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3596134072       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3570046060       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3548602886       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3499424657       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    349926224X       0  stuttgart, baden-wuerttemberg, germany  244.0\n","20857    3463179385       0  stuttgart, baden-wuerttemberg, germany  244.0"]},"metadata":{"tags":[]},"execution_count":88}]},{"cell_type":"markdown","metadata":{"id":"6ThNQeQ1kE1X"},"source":["**Задание 4**. Объедините все 3 таблички в одну. Посчитайте среднюю оценку пользователем автора."]},{"cell_type":"code","metadata":{"id":"_AlNDx_iWT4W"},"source":["total = users.set_index('user_id')\\\n",".join(ratings.set_index('user_id'))\\\n",".reset_index().set_index('isbn')\\\n",".join(books.set_index('isbn'))\\\n",".reset_index()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1LJC9doEWsWL","executionInfo":{"status":"ok","timestamp":1601391261443,"user_tz":-180,"elapsed":2031,"user":{"displayName":"Федоров Артур","photoUrl":"","userId":"09006540511072050075"}},"outputId":"f520e475-7f80-41a6-b44b-40ae9c3bb819","colab":{"base_uri":"https://localhost:8080/","height":233}},"source":["total.groupby(['user_id', 'book_author']).agg({'rating': 'mean'}).head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>rating</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th>book_author</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <th>Mark P. O. Morford</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">8</th>\n","      <th>Adam Lebor</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Amy Tan</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ann Beattie</th>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>Carlo D'Este</th>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                            rating\n","user_id book_author               \n","2       Mark P. O. Morford     0.0\n","8       Adam Lebor             0.0\n","        Amy Tan                0.0\n","        Ann Beattie            5.0\n","        Carlo D'Este           0.0"]},"metadata":{"tags":[]},"execution_count":59}]}]}